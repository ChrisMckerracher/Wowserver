apiVersion: batch/v1
kind: Job
metadata:
  name: wow-db-init
spec:
  template:
    metadata:
      labels:
        app: wow-db-init
    spec:
#      nodeSelector:
#        kubernetes.io/arch: amd64
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"  # allow scheduling on control-plane
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"         # older taint name (optional)
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: wow-db-init
          image: acore/ac-wotlk-db-import:master
          {{- with .Values.global.containerSecurityContext }}
          securityContext: {{ toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sql-password
                  key: MYSQL_ROOT_PASSWORD
            - name: AC_DATA_DIR
              value: "/azerothcore/env/dist/data"
            - name: AC_LOGS_DIR
              value: "/azerothcore/env/dist/logs"
            - name: AC_LOGIN_DATABASE_INFO
              value: "ac-database;3306;root;$(MYSQL_ROOT_PASSWORD);acore_auth"
            - name: AC_WORLD_DATABASE_INFO
              value: "ac-database;3306;root;$(MYSQL_ROOT_PASSWORD);acore_world"
            - name: AC_CHARACTER_DATABASE_INFO
              value: "ac-database;3306;root;$(MYSQL_ROOT_PASSWORD);acore_characters"
      restartPolicy: Never
  backoffLimit: 1
